// Generated by view binder compiler. Do not edit!
package com.example.cardio_diagnostics.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.cardio_diagnostics.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomEditTextBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatEditText etText;

  @NonNull
  public final ImageView ivArrow;

  @NonNull
  public final TextInputLayout layoutTextInput;

  @NonNull
  public final View mainLay;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final TextView txtError;

  @NonNull
  public final TextView txtLabel;

  private CustomEditTextBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatEditText etText, @NonNull ImageView ivArrow,
      @NonNull TextInputLayout layoutTextInput, @NonNull View mainLay,
      @NonNull ConstraintLayout mainLayout, @NonNull TextView txtError,
      @NonNull TextView txtLabel) {
    this.rootView = rootView;
    this.etText = etText;
    this.ivArrow = ivArrow;
    this.layoutTextInput = layoutTextInput;
    this.mainLay = mainLay;
    this.mainLayout = mainLayout;
    this.txtError = txtError;
    this.txtLabel = txtLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomEditTextBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomEditTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_edit_text, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomEditTextBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_text;
      AppCompatEditText etText = rootView.findViewById(id);
      if (etText == null) {
        break missingId;
      }

      id = R.id.iv_arrow;
      ImageView ivArrow = rootView.findViewById(id);
      if (ivArrow == null) {
        break missingId;
      }

      id = R.id.layoutTextInput;
      TextInputLayout layoutTextInput = rootView.findViewById(id);
      if (layoutTextInput == null) {
        break missingId;
      }

      id = R.id.mainLay;
      View mainLay = rootView.findViewById(id);
      if (mainLay == null) {
        break missingId;
      }

      ConstraintLayout mainLayout = (ConstraintLayout) rootView;

      id = R.id.txt_error;
      TextView txtError = rootView.findViewById(id);
      if (txtError == null) {
        break missingId;
      }

      id = R.id.txt_label;
      TextView txtLabel = rootView.findViewById(id);
      if (txtLabel == null) {
        break missingId;
      }

      return new CustomEditTextBinding((ConstraintLayout) rootView, etText, ivArrow,
          layoutTextInput, mainLay, mainLayout, txtError, txtLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
