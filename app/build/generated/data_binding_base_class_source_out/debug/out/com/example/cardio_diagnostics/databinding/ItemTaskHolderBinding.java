// Generated by view binder compiler. Do not edit!
package com.example.cardio_diagnostics.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.cardio_diagnostics.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTaskHolderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imgHolder;

  @NonNull
  public final ImageView ivFavorite;

  @NonNull
  public final ImageView ivRemoveFavorite;

  @NonNull
  public final View mainLay;

  @NonNull
  public final CardView mainLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final AppCompatTextView txInfo;

  @NonNull
  public final AppCompatTextView txTime;

  @NonNull
  public final AppCompatTextView txTitle;

  private ItemTaskHolderBinding(@NonNull CardView rootView, @NonNull ImageView imgHolder,
      @NonNull ImageView ivFavorite, @NonNull ImageView ivRemoveFavorite, @NonNull View mainLay,
      @NonNull CardView mainLayout, @NonNull ProgressBar progressBar,
      @NonNull AppCompatTextView txInfo, @NonNull AppCompatTextView txTime,
      @NonNull AppCompatTextView txTitle) {
    this.rootView = rootView;
    this.imgHolder = imgHolder;
    this.ivFavorite = ivFavorite;
    this.ivRemoveFavorite = ivRemoveFavorite;
    this.mainLay = mainLay;
    this.mainLayout = mainLayout;
    this.progressBar = progressBar;
    this.txInfo = txInfo;
    this.txTime = txTime;
    this.txTitle = txTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTaskHolderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTaskHolderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_task_holder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTaskHolderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgHolder;
      ImageView imgHolder = rootView.findViewById(id);
      if (imgHolder == null) {
        break missingId;
      }

      id = R.id.iv_favorite;
      ImageView ivFavorite = rootView.findViewById(id);
      if (ivFavorite == null) {
        break missingId;
      }

      id = R.id.iv_remove_favorite;
      ImageView ivRemoveFavorite = rootView.findViewById(id);
      if (ivRemoveFavorite == null) {
        break missingId;
      }

      id = R.id.mainLay;
      View mainLay = rootView.findViewById(id);
      if (mainLay == null) {
        break missingId;
      }

      CardView mainLayout = (CardView) rootView;

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tx_info;
      AppCompatTextView txInfo = rootView.findViewById(id);
      if (txInfo == null) {
        break missingId;
      }

      id = R.id.tx_time;
      AppCompatTextView txTime = rootView.findViewById(id);
      if (txTime == null) {
        break missingId;
      }

      id = R.id.tx_title;
      AppCompatTextView txTitle = rootView.findViewById(id);
      if (txTitle == null) {
        break missingId;
      }

      return new ItemTaskHolderBinding((CardView) rootView, imgHolder, ivFavorite, ivRemoveFavorite,
          mainLay, mainLayout, progressBar, txInfo, txTime, txTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
